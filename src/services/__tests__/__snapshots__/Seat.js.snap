// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test Seats component should render the component 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Seat
    basePrice={0}
    checkInFee={0}
    onBookSeat={[Function]}
    seat={
        Object {
            "id": 1,
          }
    }
    sessionReducer={
        Object {
            "email": "john@doe.com",
            "token": "123abc",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Button
          className="seat"
          color="secondary"
          disabled={true}
          id="Popover1"
          onClick={[Function]}
          tag="button"
>
          1
</Button>,
        <Popover
          delay={
                    Object {
                              "hide": 0,
                              "show": 0,
                            }
          }
          hideArrow={false}
          isOpen={false}
          placement="bottom"
          placementPrefix="bs-popover"
          target="Popover1"
          toggle={[Function]}
>
          <PopoverHeader
                    tag="h3"
          >
                    Seat 
                    1
          </PopoverHeader>
          <PopoverBody
                    tag="div"
          >
                    <div>
                              <h5>
                                        Price: $
                                        NaN
                                         + $
                                        0
                              </h5>
                              <small>
                                        Fees included.
                              </small>
                    </div>
                    <div>
                              <Button
                                        color="success"
                                        disabled={true}
                                        onClick={[Function]}
                                        tag="button"
                              >
                                        Book
                              </Button>
                    </div>
          </PopoverBody>
</Popover>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": 1,
          "className": "seat",
          "color": "secondary",
          "disabled": true,
          "id": "Popover1",
          "onClick": [Function],
          "tag": "button",
        },
        "ref": null,
        "rendered": 1,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <PopoverHeader
              tag="h3"
>
              Seat 
              1
</PopoverHeader>,
            <PopoverBody
              tag="div"
>
              <div>
                            <h5>
                                          Price: $
                                          NaN
                                           + $
                                          0
                            </h5>
                            <small>
                                          Fees included.
                            </small>
              </div>
              <div>
                            <Button
                                          color="success"
                                          disabled={true}
                                          onClick={[Function]}
                                          tag="button"
                            >
                                          Book
                            </Button>
              </div>
</PopoverBody>,
          ],
          "delay": Object {
            "hide": 0,
            "show": 0,
          },
          "hideArrow": false,
          "isOpen": false,
          "placement": "bottom",
          "placementPrefix": "bs-popover",
          "target": "Popover1",
          "toggle": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                "Seat ",
                1,
              ],
              "tag": "h3",
            },
            "ref": null,
            "rendered": Array [
              "Seat ",
              1,
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <div>
                  <h5>
                                    Price: $
                                    NaN
                                     + $
                                    0
                  </h5>
                  <small>
                                    Fees included.
                  </small>
</div>,
                <div>
                  <Button
                                    color="success"
                                    disabled={true}
                                    onClick={[Function]}
                                    tag="button"
                  >
                                    Book
                  </Button>
</div>,
              ],
              "tag": "div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h5>
                      Price: $
                      NaN
                       + $
                      0
</h5>,
                    <small>
                      Fees included.
</small>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Price: $",
                        NaN,
                        " + $",
                        0,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Price: $",
                      NaN,
                      " + $",
                      0,
                    ],
                    "type": "h5",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Fees included.",
                    },
                    "ref": null,
                    "rendered": "Fees included.",
                    "type": "small",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Button
                    color="success"
                    disabled={true}
                    onClick={[Function]}
                    tag="button"
>
                    Book
</Button>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Book",
                    "color": "success",
                    "disabled": true,
                    "onClick": [Function],
                    "tag": "button",
                  },
                  "ref": null,
                  "rendered": "Book",
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Button
            className="seat"
            color="secondary"
            disabled={true}
            id="Popover1"
            onClick={[Function]}
            tag="button"
>
            1
</Button>,
          <Popover
            delay={
                        Object {
                                    "hide": 0,
                                    "show": 0,
                                  }
            }
            hideArrow={false}
            isOpen={false}
            placement="bottom"
            placementPrefix="bs-popover"
            target="Popover1"
            toggle={[Function]}
>
            <PopoverHeader
                        tag="h3"
            >
                        Seat 
                        1
            </PopoverHeader>
            <PopoverBody
                        tag="div"
            >
                        <div>
                                    <h5>
                                                Price: $
                                                NaN
                                                 + $
                                                0
                                    </h5>
                                    <small>
                                                Fees included.
                                    </small>
                        </div>
                        <div>
                                    <Button
                                                color="success"
                                                disabled={true}
                                                onClick={[Function]}
                                                tag="button"
                                    >
                                                Book
                                    </Button>
                        </div>
            </PopoverBody>
</Popover>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": 1,
            "className": "seat",
            "color": "secondary",
            "disabled": true,
            "id": "Popover1",
            "onClick": [Function],
            "tag": "button",
          },
          "ref": null,
          "rendered": 1,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PopoverHeader
                tag="h3"
>
                Seat 
                1
</PopoverHeader>,
              <PopoverBody
                tag="div"
>
                <div>
                                <h5>
                                                Price: $
                                                NaN
                                                 + $
                                                0
                                </h5>
                                <small>
                                                Fees included.
                                </small>
                </div>
                <div>
                                <Button
                                                color="success"
                                                disabled={true}
                                                onClick={[Function]}
                                                tag="button"
                                >
                                                Book
                                </Button>
                </div>
</PopoverBody>,
            ],
            "delay": Object {
              "hide": 0,
              "show": 0,
            },
            "hideArrow": false,
            "isOpen": false,
            "placement": "bottom",
            "placementPrefix": "bs-popover",
            "target": "Popover1",
            "toggle": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "Seat ",
                  1,
                ],
                "tag": "h3",
              },
              "ref": null,
              "rendered": Array [
                "Seat ",
                1,
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <div>
                    <h5>
                                        Price: $
                                        NaN
                                         + $
                                        0
                    </h5>
                    <small>
                                        Fees included.
                    </small>
</div>,
                  <div>
                    <Button
                                        color="success"
                                        disabled={true}
                                        onClick={[Function]}
                                        tag="button"
                    >
                                        Book
                    </Button>
</div>,
                ],
                "tag": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h5>
                        Price: $
                        NaN
                         + $
                        0
</h5>,
                      <small>
                        Fees included.
</small>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Price: $",
                          NaN,
                          " + $",
                          0,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Price: $",
                        NaN,
                        " + $",
                        0,
                      ],
                      "type": "h5",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Fees included.",
                      },
                      "ref": null,
                      "rendered": "Fees included.",
                      "type": "small",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Button
                      color="success"
                      disabled={true}
                      onClick={[Function]}
                      tag="button"
>
                      Book
</Button>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Book",
                      "color": "success",
                      "disabled": true,
                      "onClick": [Function],
                      "tag": "button",
                    },
                    "ref": null,
                    "rendered": "Book",
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
